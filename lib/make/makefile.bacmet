# makefile.bacmet
#
# Library makefile to make running DIAMOND simpler against the bacmet database.
#
# Include the full path of this file in your Makefile and making databases and
# running the aligner can be done via make. See documentation in in
# the biomakefile Git repository: doc/makefile.md and documentation for
# individual targets below.
#
# Author: diego.brambilla@tim.it

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.

# bacmet.py specific macro
# DIAMOND output associate some scores to each match, 
# including the aminoacidic (a.a.) alignement length.
# Defines the desired minimum a.a. alignemnt length threshold that bacmet.py will use
ALENGTH = 37.5

# Download HTTP URL for the BacMet protein database
# In case you are not using ftp, you can override this macro and paste here the https URL.
HTTP = http://bacmet.biomedicine.gu.se/download/BacMet2_EXP_database.fasta
# IMPORTANT: databases are updated recurrently, so always check the availability of the http

# Download HTTPS URL for the bacmet.py script, necessary for the downstream analyses
HTTPS = https://gist.github.com/08ab264f0ea127cc242d99bc3844c743.git 
# IMPORTANT: after running mirror_bacmet.py, have bacmet.py inside one of the directories listed in the $PATH variable.
# N.B.: the python script "bacmetg.py" requires python 3.6*-3.8*

# *** Internal ***

# MAKECALL_BACMET is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_DATE     = echo "`date +"%Y-%m-%d %H:%M:%S"`" > $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_BACMET = $(MAKECALL_DATE); $(MAKECALL_INFILES)

# *** BacMet targets ***

# Fetch the BacMet protein database, and unpack the tar files.
mirror_bacmet:
	wget $(HTTP)

# Fetch the bacmet.py script
# Uses git as a prerequisite, if not available you can manually download the file via wget
mirror_bacmet.py:
	git clone $(HTTPS)


# parses DIAMOND m8 matrix to get unique tab-separated hits
sort_best_m8: $(subst .bacmet.m8,.bacmet.sort.best.m8, $(wildcard *.bacmet.m8))

#filters out DIAMOND m8 matrix to select hits based on alignment length cutoff (input)

bacmet_alength_filter: $(subst .bacmet.m8,.bacmet.filter.sort.best.m8, $(wildcard *.bacmet.m8))

# parses DIMAOND m8 matrix to get an annotated gene list
sort_bacmet_genelist_tsv: $(subst .bacmet.m8,.genelist.tsv, $(wildcard *.bacmet..m8))


# *** Make rules ***

%.bacmet.sort.best.m8: %.bacmet.m8
	$(MAKECALL_BACMET)
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->sorting $><--"
	sort -u -k1,1 $< | sed 's/|/\t/g' > $@

%.bacmet.filter.sort.best.m8: %.bacmet.sort.best.m8
	$(MAKECALL_BACMET)
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->filtering $><--"
	python bacmet.py $< $(ALENGTH) $@

%.genelist.tsv: %.m8
	$(MAKECALL_BACMET)
	echo -E "`date +"%Y-%m-%d %H:%M:%S"`: --->sorting $><--"
	cut -f 1,2 $< | sed 's/|/\t/g' | sort -u -k6,6 - > $@

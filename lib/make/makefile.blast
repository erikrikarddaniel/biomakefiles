# makefile.blast
#
# Library makefile to make running NCBI's BLAST+ programs simpler.
#
# Include the full path of this file in your Makefile 
#
# Author: daniel.lundin@lnu.se

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
# This needs to point to wherever you store NCBI data for the refseq targets to
# work. Make sure it's a relative path, probably to a symlink within the local
# copy of the project. (Don't want to set environment variables.)
NCBI_BLAST_DB_PATH  = YOU NEED TO SET THE NCBI_BLAST_DB_PATH VARIABLE (see makefile.blast)
BLAST_PROTEIN_DB    = YOU NEED TO SET THE BLAST_PROTEIN_DB VARIABLE (see makefile.blast)
BLAST_NUCLEOTIDE_DB = YOU NEED TO SET THE BLAST_NUCLEOTIDE_DB VARIABLE (see makefile.blast)

# Set if you want to run with non-default options, e.g. -num_threads 8
BLAST_OPTS       =
# -parse_seqids
MAKEBLASTDB_OPTS =

# *** Internal ***

# MAKECALL_BLAST_BLAST is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_BLAST_VERSION     = echo "$$(date +"%Y%m%d %H:%M:%S"): $@ was made with $$(blastp -version|grep 'blastp:')" > $@.makecall
MAKECALL_BLAST_NCBI_DBS    = echo "	Called with path to NCBI dbs: $(NCBI_BLAST_DB_PATH)" >> $@.makecall
MAKECALL_BLAST_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_BLAST             = $(MAKECALL_BLAST_VERSION); $(MAKECALL_BLAST_NCBI_DBS); $(MAKECALL_BLAST_INFILES)

# *** Targets ***

# UNTESTED and assumes you've also included makefile.misc that can convert a fastq.gz to an fna:
all_mega.blastn6s: $(subst .fna,.mega.blastn6.tsv.gz,$(wildcard *.fastq.gz))

%.refseq_protein.blasttab.gz: %.fna
	$(MAKECALL_BLAST)
	blastx -db $(NCBI_BLAST_DB_PATH)/refseq_protein -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.refseq_protein.blasttab.gz: %.faa
	$(MAKECALL_BLAST)
	blastp -db $(NCBI_BLAST_DB_PATH)/refseq_protein -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.nt.mega.blastn6.tsv.gz: %.fna
	$(MAKECALL_BLAST)
	blastn -task megablast -db $(NCBI_BLAST_DB_PATH)/nt -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@
	echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.blastp6.tsv.gz: %.faa
	blastp -db $(BLAST_PROTEIN_DB) -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@

%.blastx.blastp6.tsv.gz: %.fna
	blastx -db $(BLAST_PROTEIN_DB) -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@

%.mega.blastout.gz: %.fna
	blastn -task megablast -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) | gzip -c > $@

%.mega.blastout: %.fna
	blastn -task megablast -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) > $@

%.mega.blastn6.tsv.gz: %.fna
	blastn -task megablast -db $(BLAST_NUCLEOTIDE_DB) -query $< -outfmt 6 $(BLAST_OPTS) | gzip -c > $@

%.mega.blastn6.tsv: %.fna
	blastn -task megablast -db $(BLAST_NUCLEOTIDE_DB) -query $< -outfmt 6 $(BLAST_OPTS) > $@

%.blastn.blastout.gz: %.fna
	blastn -task blastn -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) | gzip -c > $@

%.blastn.blastn6.tsv.gz: %.fna
	blastn -outfmt 6 -task blastn -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) | gzip -c > $@

%.blastn-short.blastout.gz: %.fna
	blastn -task blastn-short -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) | gzip -c > $@

%.blastn-short.blastn6.tsv.gz: %.fna
	blastn -outfmt 6 -task blastn-short -db $(BLAST_NUCLEOTIDE_DB) -query $< $(BLAST_OPTS) | gzip -c > $@

# Extract sequences from a blastn6 file to a fasta file
%.fna.gz: %.blastn6.tsv.gz
	gunzip -c $< | cut -f 2,9,10 | awk '{ if ( $$2 < $$3 ) { printf "%s %d-%d %s\n", $$1, $$2, $$3, "plus" } else { printf "%s %d-%d %s\n", $$1, $$3, $$2, "minus" } }' | blastdbcmd -db $(BLAST_NUCLEOTIDE_DB) -entry_batch - | gzip -c > $@

# Include 100 nucleotides context up- and downstream
%.c100.fna.gz: %.blastn6.tsv.gz
	gunzip -c $< | cut -f 2,9,10 | awk '{ if ( $$2 < $$3 ) { printf "%s %d-%d %s\n", $$1 - 100, $$2 + 100, $$3, "plus" } else { printf "%s %d-%d %s\n", $$1, $$3 - 100, $$2 + 100, "minus" } }' | blastdbcmd -db $(BLAST_NUCLEOTIDE_DB) -entry_batch - | gzip -c > $@

%.accnos: %.blastp6.tsv.gz
	gunzip -c $< | cut -f 2 | sort -u > $@

%.blastdb: %.faa
	makeblastdb -in $< -out $(basename $@) -dbtype prot
	touch $@

%.blastdb: %.faa.gz
	gunzip -c $< | makeblastdb $(MAKEBLASTDB_OPTS) -out $(basename $@) -title $(basename $@) -dbtype prot
	touch $@

%.blastdb: %.fna
	makeblastdb $(MAKEBLASTDB_OPTS) -in $< -out $(basename $@) -dbtype nucl
	touch $@

%.blastdb: %.fna.gz
	gunzip -c $< | makeblastdb $(MAKEBLASTDB_OPTS) -out $(basename $@) -title $(basename $@) -dbtype nucl
	touch $@

# makefile.gtdb
#
# Library makefile to make fetching data from GTDB simpler.
#
# Include the full path of this file in your Makefile ...
#
# makefile.gtdb_refseq_mags will complete the downloads with data from RefSeq and Archeaeal mags from GTDB website
#
# Author: daniel.lundin@lnu.se, daniel.lundin@dbb.su.se

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
GTDB_RELEASE     = r207
GTDB_URL_RELEASE = release207
GTDB_SUBRELEASE  = 207.0
GTDB_RELEASE_URL = https://data.ace.uq.edu.au/public/gtdb/data/releases/
GTDB_LATEST_URL  = $(GTDB_RELEASE_URL)/latest

# *** Internal ***

# *** Targets ***
#
# NEW START:
#metadata: ar122_metadata.tsv bac120_metadata.tsv
metadata: ar53_metadata.tsv bac120_metadata.tsv

#ar122_metadata.tsv: ar122_metadata.tar.gz
#	tar xfz $< ar122_metadata_$(GTDB_RELEASE).tsv
#	ln -s ar122_metadata_$(GTDB_RELEASE).tsv $@
ar53_metadata.tsv:
	wget $(GTDB_RELEASE_URL)/$(GTDB_URL_RELEASE)/$(GTDB_SUBRELEASE)/ar53_metadata_$(GTDB_RELEASE).tar.gz
	tar xfz ar53_metadata_$(GTDB_RELEASE).tar.gz ar53_metadata_$(GTDB_RELEASE).tsv
	ln -s ar53_metadata_$(GTDB_RELEASE).tsv $@

bac120_metadata.tsv: 
	wget $(GTDB_RELEASE_URL)/$(GTDB_URL_RELEASE)/$(GTDB_SUBRELEASE)/bac120_metadata_$(GTDB_RELEASE).tar.gz
	tar xfz bac120_metadata_$(GTDB_RELEASE).tar.gz bac120_metadata_$(GTDB_RELEASE).tsv
	ln -s bac120_metadata_$(GTDB_RELEASE).tsv $@

trees: ar53.tree bac120.tree

ar53.tree: ar53.tree.tar.gz
	tar xfz $<

ar53.tree.tar.gz:
	wget https://data.gtdb.ecogenomic.org/releases/latest/$@

bac120.tree: bac120.tree.tar.gz
	tar xfz $<

bac120.tree.tar.gz:
	wget https://data.gtdb.ecogenomic.org/releases/latest/$@

assembly_summaries: assembly_summary_genbank.txt assembly_summary_refseq.txt assembly_summary_genbank_historical.txt assembly_summary_refseq_historical.txt

assembly_summary_genbank.txt: 
	wget ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/$@

assembly_summary_refseq.txt: 
	wget ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/$@

assembly_summary_genbank_historical.txt: 
	wget ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/$@

assembly_summary_refseq_historical.txt: 
	wget ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/$@

# This macro uses R to find accessions present in /tmp/gtdb_genbank_genomes.tsv.patterns but not in /tmp/gtdb_genbank_genomes.tsv.accno,
# and writes them to a new /tmp/gtdb_genbank_genomes.tsv.patterns, thereby reducing the number of patterns for the next iteration.
REDUCE_PATTERNS = Rscript --default-packages=data.table -e "fwrite(fread('/tmp/gtdb_genbank_genomes.tsv.patterns', col.names = 'acc')[!fread('/tmp/gtdb_genbank_genomes.tsv.accno', col.names = 'acc'), on = .(acc)], '/tmp/gtdb_genbank_genomes.tsv.patterns', quote = F, col.names = F)"; echo "--> searching for $$(wc -l /tmp/$@.patterns | sed 's/[^0-9]*//g') accessions - found $$(wc -l $@ | sed 's/[^0-9]*//g') accessions <--"

# This creates a file with genome information from GTDB combined with paths from various NCBI sources.
# It deals with the fact that many accessions can be collected from different places at NCBI by
# prioritizing the most current databases rather than those marked historical. Moreover, it deals
# with accessions that have moved from NR to RefSeq, which is reflected in the prefix to accessions,
# by searching for accessions missing with patterns that are more general in the third  positoin of
# the prefix.
gtdb_genbank_genomes.tsv: ar53_metadata.tsv bac120_metadata.tsv assembly_summary_refseq.txt assembly_summary_genbank.txt assembly_summary_refseq_historical.txt assembly_summary_genbank_historical.txt 
	@rm -f $@.tmp /tmp/gtdb_genbank_genomes.tsv.split* /tmp/gtdb_genbank_genomes.tsv.patterns /tmp/gtdb_genbank_genomes.tsv.accno
	# Get a list of accessions, write to /tmp/gtdb_genbank_genomes.tsv.patterns
	@cut -f 1 $(wordlist 1,2,$^) | grep -v '^accession' | sed 's/^[A-Z][A-Z]_//' > /tmp/$@.patterns
	@echo -n > $@
	@echo "--> searching for $$(wc -l /tmp/$@.patterns | sed 's/[^0-9]*//g') accessions - found $$(wc -l $@ | sed 's/[^0-9]*//g') accessions <--"
	# Find them in the main assembly summaries, first refseq, then genbank
	# RefSeq are so many, so we split the patterns
	@split -l 1000 -d /tmp/$@.patterns /tmp/$@.split
	@for f in /tmp/$@.split*; do \
	  grep -h -f $$f $(word 3,$^) >> $@.tmp; \
	done
	@cut -f 1 $@.tmp > /tmp/$@.accno
	@$(REDUCE_PATTERNS)
	# GenBank
	@grep -h -f /tmp/$@.patterns $(word 4,$^) >> $@.tmp
	# Remove patterns that were found and make them more general in the third (A or F) position
	@cut -f 1 $@.tmp > /tmp/$@.accno
	@$(REDUCE_PATTERNS)
	@sed -i 's/GC./GC./' /tmp/$@.patterns
	# RefSeq, generalized pattern
	@grep -h -f /tmp/$@.patterns $(word 3,$^) >> $@.tmp
	@cut -f 1 $@.tmp | sed 's/GC./GC./' > /tmp/$@.accno
	@$(REDUCE_PATTERNS)
	# GenBank, generalized pattern
	@grep -h -f /tmp/$@.patterns $(word 4,$^) >> $@.tmp
	# Search the historical assembly summaries
	@cut -f 1 $@.tmp | sed 's/GC./GC./' > /tmp/$@.accno
	@$(REDUCE_PATTERNS)
	@grep -h -f /tmp/$@.patterns $(word 5,$^) >> $@.tmp
	@cut -f 1 $@.tmp | sed 's/GC./GC./' > /tmp/$@.accno
	@$(REDUCE_PATTERNS)
	@grep -h -f /tmp/$@.patterns $(word 6,$^) >> $@.tmp
	@cut -f 1 $@.tmp | sed 's/GC./GC./' > /tmp/$@.accno
	@sort -u $@.tmp > $@

ssu_all.tar.gz:
	wget https://data.gtdb.ecogenomic.org/releases/latest/genomic_files_all/$@

# Try to get rid of version number some day
bacteria_ssu_all.fna.gz: ssu_all.tar.gz
	tar xzfO $< | grep -A 1 Bacteria | grep -v '^--' | gzip -c > $@

archaea_ssu_all.fna.gz: ssu_all.tar.gz
	tar xzfO $< | grep -A 1 Archaea | grep -v '^--' | gzip -c > $@

# This creates a temporary makefile that can be used to fetch everything.
# Useful for parallelisation.
ADD_DONE = sed 's:^[a-z]\+tp\://::' | sed 's:$$:/done:'
makefile.fetch: gtdb_genbank_genomes.tsv 
	@echo "--> all <--"
	@echo "all: $$(grep -v '^#' $< | cut -f 20 | sed 's:https.//::' | sort -u | $(ADD_DONE) | tr '\n' ' ')" > $@
	@echo >> $@
	@echo "--> Individual targets <--"
	@for f in $$(grep -v '^#' $< | cut -f 20 | sort -u); do \
	echo "$$(echo $$f | sed 's:https.//::' | $(ADD_DONE) | tr '\n' ' '):"; \
	echo "	if [ \$$\$$(wget -S --spider $$(echo $$f | sed 's/https/ftp/')  2>&1 | grep -c '\(File.*exists\)\|\(HTTP/1.1 200 OK\)') -gt 0 ]; then \\"; \
	echo "	wget --mirror -A *genom*fna.gz -R *cds_from_genomic* -R *assembly_structure* $$(echo $$f | sed 's/https/ftp/'); \\"; \
	echo "	touch \$$@; \\"; \
	echo "	fi"; \
	echo ; \
	done >> $@

# Do some tests to check presence of accessions in the metadata files.
# You need to create a file called accession_list.tsv that contains all accessions you want to
# check for. This could e.g. be taken from files names of downloaded and annotated genomes.
accession_tests.tsv: accession_list.tsv	ar122_metadata.tsv bac120_metadata.tsv
	cat $(wordlist 2,3,$^) > /tmp/metadata.tsv
	echo "accno	n_accno0_field01	n_accno1_field55	n_rows" > $@
	for a in $$(cat $<); do \
	  echo "$$a	$$(cut -f 1 /tmp/metadata.tsv | grep -c $$a)	$$(cut -f 55 /tmp/metadata.tsv | grep -c $$a)	$$(grep -hc $$a /tmp/metadata.tsv)"; \
	done > $@

### # I'm not sure which of the ncbi_data, refseq_data and uba_mags_data targets are needed
### # in light of the makefile.fetch target further down.
### 
### # Fetch NCBI data
### # Modified from rsync_genbank.sh script in https://github.com/Ecogenomics/GTDBNCBI/
### ncbi_data:
### 	rsync -rtlvL --chmod=Dug=rwx,Do=rx,Fug=rw,Fo=r --exclude=*/all_assembly_versions --exclude=*/representative --exclude=README.txt ftp.ncbi.nlm.nih.gov::genomes/genbank/archaea/ gtdb_ncbi_genomes/.
### 	rsync -rtlvL --chmod=Dug=rwx,Do=rx,Fug=rw,Fo=r --exclude=*/all_assembly_versions --exclude=*/representative --exclude=README.txt ftp.ncbi.nlm.nih.gov::genomes/genbank/bacteria/ gtdb_ncbi_genomes/.
### 
### # Fetch Refseq dat
### # Modified from rsync_refseq.sh script from https://github.com/Ecogenomics/GTDBNCBI/
### refseq_data:
### 	rsync  -rtlvL --chmod=Dug=rwx,Do=rx,Fug=rw,Fo=r  --exclude=*/all_assembly_versions --exclude=*/representative --exclude=README.txt ftp.ncbi.nlm.nih.gov::genomes/refseq/archaea/ gtdb_refseq_genomes/.
### 	rsync  -rtlvL --chmod=Dug=rwx,Do=rx,Fug=rw,Fo=r  --exclude=*/all_assembly_versions --exclude=*/representative --exclude=README.txt ftp.ncbi.nlm.nih.gov::genomes/refseq/bacteria/ gtdb_refseq_genomes/.
### 
### # Fetch archeaeal mags from gtdb website
### uba_mags_data:
### 	wget https://data.ace.uq.edu.au/public/gtdb/data/releases/$(GTDB_RELEASE)/gtdb_uba_mags_arc.tar.gz
### 	mkdir gtdb_uba_mags && tar -C ./gtdb_uba_mags/ -xvf gtdb_uba_mags_arc.tar.gz && rm gtdb_uba_mags_arc.tar.gz 
### 
### # Download data (easier to do with the script included in the distribution)
### # N.B. The name and the html path of the file can change and may have to be updated
### arc_taxonomy.genomes.tsv:
### 	wget https://data.ace.uq.edu.au/public/gtdb/release$(GTDB_RELEASE)/arc_taxonomy_r$(GTDB_RELEASE).tsv
### 	ln -s arc_taxonomy_r$(GTDB_RELEASE).tsv $@
### 	
### arc_metadata.tsv:
### 	wget https://data.ace.uq.edu.au/public/gtdb/data/releases/$(GTDB_RELEASE)/arc122_metadata.tsv
### 	ln -s arc122_metadata.tsv $@
### 
### taxonomies: ar122_taxonomy.tsv bac120_taxonomy.tsv
### 
### metadata: ar122_metadata.tsv bac120_metadata.tsv
### 
### trees: ar122.tree bac120.tree ar122.sp_labels.tree bac120.sp_labels.tree
### 
### # Download data (easier to do with the script included in the distribution)
### ar122_taxonomy.tsv:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### ar122_metadata.tsv:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### ar122.tree:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### ar122.sp_labels.tree:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### bac120_taxonomy.tsv:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### bac120_metadata.tsv:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### bac120.tree:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### bac120.sp_labels.tree:
### 	wget $(GTDB_LATEST_URL)/$@
### 
### ncbi_genome_accnos.tsv: ar122_metadata.tsv bac120_metadata.tsv
### 	cut -f 1 $^ | grep -v 'accession' | sed 's/^[A-Z][A-Z]_//' > $@
### 
### assembly_summary_genbank.txt: 
### 	wget ftp://ftp.ncbi.nlm.nih.gov/genomes/ASSEMBLY_REPORTS/$@
### 
### gtdb_genbank_genomes_prokka_index.tsv.gz: gtdb_genbank_genomes.tsv
### 	for a in $$(grep -v '#' $<|cut -f 1); do ls genomes/$${a}*.prokka.d/ | sed "s/^/$${a}\t/"; done | gzip -c > $@

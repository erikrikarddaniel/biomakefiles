# makefile.samples
#
# Library makefile for a samples directory. It is assumed that this directory
# contains only symbolic links to the real gzipped sequencing files (or similar
# for a non-sequencing project).
#
# Include the full path of this file in your Makefile ...
#
# Author: erik.rikard.daniel.gmail.com

SHELL := /bin/bash

# This number tries to make sure statistics are output in the order programs
# were run.  The first directory, which is probably the one including this
# file, should thus have the lowest order string.
STAT_ORDER = 00000

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#

# *** Internal ***

# *** Targets ***

samples.stats.long.tsv: $(wildcard *.r1.fastq.gz)
	@for sample in $(SAMPLES); do \
	  echo "$(STAT_ORDER)	samples	$$sample	-	r1	$$sample.r1.fastq.gz	$$(echo $$(gunzip -c $$sample.r1.fastq.gz | wc -l)/4 | bc)"; \
	  echo "$(STAT_ORDER)	samples	$$sample	-	r2	$$sample.r2.fastq.gz	$$(echo $$(gunzip -c $$sample.r2.fastq.gz | wc -l)/4 | bc)"; \
	done | sort | tee $@

# Create symbolic links to sample files.
# Note: It looks like this was run in three different sequencing runs, visible
# by different numbers following S in the original file names, but always with
# different lanes. To be really general, this rule should take care of the S
# number too. Thus, if you received sequences from NCBIS all you need to do is to
# pay attention to the folder structure ({d} variable) which is based on the NCBIS
# nomenclature and modify it accordingly. 
links:
	for d in ../P10353/P10353_10??; do \
	  for l in {1..6}; do \
	    for r in 1 2; do \
	      s=$$(basename $$d); \
	      p=$${d}/*/*/$${s}_*_L00$${l}_R$${r}_001.fastq.gz; \
	      if [ -e $${p} ]; then \
	        ln -s $${p} $${s}.lane00$${l}.r$${r}.fastq.gz; \
	      fi; \
	    done; \
	  done; \
	done

# makefile.samtools
#
# Library makefile to make running the programs in the samtools suite simpler.
#
# Include the full path of this file in your Makefile ...
#
# Author: daniel.lundin@scilifelab.se

SHELL := /bin/bash

# *** Parameters ***

# Override in your Makefile by setting a parameter *after* the row that
# includes this file, see documentation in doc/makefile.md.
#
SAMTOOLS_OPTS =

# Redefine if you want to add options to the samtools $(SAMTOOLS_IDXSTATS_OPTS) $(SAMTOOLS_OPTS) idxstats calls
SAMTOOLS_IDXSTATS_OPTS =

# *** Internal ***

# MAKECALLsamtools is a macro that defines what will be output to the .makecall
# file, the file that records versions, file stamps, parameters etc.
#
# *Don't redefine!*
MAKECALL_VERSION     = echo "`date +"%Y%m%d %H:%M:%S"`: $@ was made with `samtools --version|grep samtools`" > $@.makecall
MAKECALL_PARAMS      = echo "	Called with parameters: $(samtools_OPTS)" >> $@.makecall
MAKECALL_INFILES     = echo "	Input files: $^ (`ls -lL $^|tr '\n' ','`)" >> $@.makecall
MAKECALL_SAMTOOLS      = $(MAKECALL_VERSION); $(MAKECALL_PARAMS); $(MAKECALL_INFILES)

# *** Targets ***

# Make an idxstats (counts per target) file for each .sam/.sam.gz file. *DON'T* run in parallel.
all_sam2idxstats: $(subst .sam,.idxstats,$(wildcard *.sam)) $(subst .sam.gz,.idxstats,$(wildcard *.sam.gz))

# Make an flagstat (overarching stats) file for each .sam/.sam.gz file.
all_sam2flagstats: $(subst .sam,.flagstat,$(wildcard *.sam)) $(subst .sam.gz,.flagstat,$(wildcard *.sam.gz))

all_bam2flagstats: $(subst .bam,.flagstat,$(wildcard *.bam))

# idxstats from sorted bam files
all_sorted_bams_to_idxstats: $(subst .sorted.bam,.idxstats.gz,$(wildcard *.sorted.bam))

# Extract only the mapped reads from sorted bam files (to reduce size of bams)
all_sorted_bams_to_mapped_bams: $(subst .sorted.bam,.mapped.bam,$(wildcard *.sorted.bam))
all_sorted_bams_to_mapped_sam.gzs: $(subst .sorted.bam,.mapped.sam.gz,$(wildcard *.sorted.bam))

# Convert all sam files to bam
all_samgz2bams: $(subst .sam,.bam,$(wildcard *.sam)) $(subst .sam.gz,.bam,$(wildcard *.sam.gz))

# Convert all sam files to sorted bam. *DON'T* run in parallel.
all_samgz2sortedbams: $(subst .sam,.sorted.bam,$(wildcard *.sam)) $(subst .sam.gz,.sorted.bam,$(wildcard *.sam.gz))

# Make a pair of fastq files for each .sam/.sam.gz file containing the *unmapped* reads.
# (Useful for filtering.)
#all_unmappedpairs_fastqpairs: $(subst .bam,.unmappedpairs.fastqpairs,$(wildcard *.bam)) $(subst .sam,.unmappedpairs.fastqpairs,$(wildcard *.sam)) $(subst .sam.gz,.unmappedpairs.fastqpairs,$(wildcard *.sam.gz))
all_unmappedpairs_fastqpairs: $(subst .bam,.unmappedpairs.fastqpairs,$(wildcard *.bam))

idxstats.tsv: $(wildcard *.idxstats)
	echo "sample	sequence	seqlen	n_mapped	n_unmapped" > $@
	for f in $^; do \
	  cat $$f | sed "s/^/$$(basename $$f .idxstats)\t/" >> $@; \
	done

idxstats.tsv.gz: $(wildcard *.idxstats.gz)
	echo "sample	sequence	seqlen	n_mapped	n_unmapped"|gzip -c > $@; \
	for f in $^; do \
	  gunzip -c $$f | sed "s/^/$$(basename $$f .idxstats.gz)\t/"; \
	done | gzip -c >> $@

.SECONDARY:

%.flagstat: %.bam
	@$(MAKECALL_SAMTOOLS)
	samtools flagstat $< > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.mapped.bam: %.sorted.bam
	@$(MAKECALL_SAMTOOLS)
	samtools view -bh -F 4 $< > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.mapped.sam.gz: %.sorted.bam
	@$(MAKECALL_SAMTOOLS)
	samtools view -F 4 $< | gzip -c > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.idxstats.gz: %.sorted.bam.bai
	@$(MAKECALL_SAMTOOLS)
	samtools $(SAMTOOLS_IDXSTATS_OPTS) $(SAMTOOLS_OPTS) idxstats $(basename $<) | grep -Pv "\t0\t0$$" | gzip -c > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.sorted.bam.bai: %.sorted.bam
	@$(MAKECALL_SAMTOOLS)
	samtools index $<
	touch $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall
		        
%.sorted.bam: %.bam
	@$(MAKECALL_SAMTOOLS)
	samtools sort $< > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.bam: %.sam.gz
	@$(MAKECALL_SAMTOOLS)
	gunzip -c $< | samtools view -Sb > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.bam: %.sam
	@$(MAKECALL_SAMTOOLS)
	samtools view -Sb $< > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.unmapped.bam: %.bam
	@$(MAKECALL_SAMTOOLS)
	samtools view -b -f 4 $< > $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

%.unmappedpairs.fastqpairs: %.bam
	@$(MAKECALL_SAMTOOLS)
	samtools view -b -f 12 $< | samtools fastq -1 $(basename $@).r1.fastq.gz -2 $(basename $@).r2.fastq.gz $<
	touch $@
	@echo "`date +"%Y%m%d %H:%M:%S"`: DONE" >> $@.makecall

all_bam.md5s: $(subst .bam,.bam.md5,$(wildcard *.bam))

%.bam.md5: %.bam
	md5sum $< > $@
